<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 一个小运维的博客</title>
    <link>https://www.llmgo.cn/post/</link>
    <description>Recent content in Posts on 一个小运维的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 08 May 2021 17:11:24 +0800</lastBuildDate><atom:link href="https://www.llmgo.cn/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>buildah 简单使用</title>
      <link>https://www.llmgo.cn/post/buildah-simple-to-use/</link>
      <pubDate>Sat, 08 May 2021 17:11:24 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/buildah-simple-to-use/</guid>
      <description>buildah 简单使用 buildah 构建镜像的优势 兼容Dockerfile 不依赖docker daemon 下载buildah 1 yum install -y buildah 构建镜像 1 buildah bud -t harbor.example.com/library/app:v1 -f Dockerfile . 登陆 1 buildah login --tls-verify=false harbor.example.com 推送</description>
    </item>
    
    <item>
      <title>好用的文件服务器</title>
      <link>https://www.llmgo.cn/post/easy-to-use-file-servermd/</link>
      <pubDate>Thu, 29 Apr 2021 15:25:21 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/easy-to-use-file-servermd/</guid>
      <description>好用的文件服务器 这里记录一下好用的三个文件服务器 https://github.com/filebrowser/filebrowser https://github.com/silverwind/droppy http://iscute.cn/chfs</description>
    </item>
    
    <item>
      <title>使用caddy作为文件服务器</title>
      <link>https://www.llmgo.cn/post/use-caddy-as-fileserver/</link>
      <pubDate>Mon, 26 Apr 2021 15:20:02 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/use-caddy-as-fileserver/</guid>
      <description>使用caddy作为文件服务器 对比nginx优势 界面比nginx好看一万倍 自动https证书 配置简单一万倍 废话不多说，开始 安装caddy https://caddyserver.com/download https://github.com/caddyserver/caddy/releases/ 1</description>
    </item>
    
    <item>
      <title>go构建约束问题</title>
      <link>https://www.llmgo.cn/post/go-build-constraint-problem/</link>
      <pubDate>Thu, 22 Apr 2021 18:26:31 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-build-constraint-problem/</guid>
      <description>go构建约束问题 这是go的条件编译导致的，具体的方法是在go文件的第一行注释写//+build linux表明这个文件在Linux平台才能编译</description>
    </item>
    
    <item>
      <title>日志切割神器logrotate</title>
      <link>https://www.llmgo.cn/post/logrotate/</link>
      <pubDate>Wed, 14 Apr 2021 16:01:56 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/logrotate/</guid>
      <description>日志切割神器logrotate [toc] logrotate 是一个 linux 系统日志的管理工具。可以对单个日志文件或者某个目录下的文件按时间 / 大小进行切割，压缩操作；指定日志</description>
    </item>
    
    <item>
      <title>golang 使用websocket简单使用</title>
      <link>https://www.llmgo.cn/post/go-sample-websocket/</link>
      <pubDate>Tue, 13 Apr 2021 16:16:17 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-sample-websocket/</guid>
      <description>golang websocket简单使用 废话不多说，直接贴代码 server.go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;golang.org/x/net/websocket&amp;#34; &amp;#34;net/http&amp;#34; ) func Echo(ws *websocket.Conn) { fmt.Println(&amp;#34;new</description>
    </item>
    
    <item>
      <title>Github 加速</title>
      <link>https://www.llmgo.cn/post/accelerate-github/</link>
      <pubDate>Mon, 12 Apr 2021 20:43:50 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/accelerate-github/</guid>
      <description>Github 加速 我们有时候pull Github 代码的时候太慢了，极大的影响了效率，这里我给大家推荐几个加速的方法。 这里感谢以下两个网站提供的加速 https://github.com.cnpmjs.org https://gitclone.com (只支持gi</description>
    </item>
    
    <item>
      <title>在 kubernetes 上使用CephFS作为文件存储</title>
      <link>https://www.llmgo.cn/post/use-cephfs-kubernetes-pv-pvc/</link>
      <pubDate>Mon, 12 Apr 2021 19:25:55 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/use-cephfs-kubernetes-pv-pvc/</guid>
      <description>在 kubernetes 上使用CephFS作为文件存储 最近想使用cephfs来代替nfs来作为共享存储，这里来记录一下方法，这里主要是使用pv，pvc的模式。 前</description>
    </item>
    
    <item>
      <title>教你使用阿里云构建海外镜像</title>
      <link>https://www.llmgo.cn/post/use-aliyun-build-image/</link>
      <pubDate>Fri, 09 Apr 2021 17:22:26 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/use-aliyun-build-image/</guid>
      <description>教你使用阿里云构建海外镜像 我们平时有时候需要拉取国外的镜像，但是非常慢，或者非常大，容易失败，这里可以使用阿里云的免费容器镜像仓库+代码仓库</description>
    </item>
    
    <item>
      <title>git 常用命令</title>
      <link>https://www.llmgo.cn/post/git-commands/</link>
      <pubDate>Fri, 09 Apr 2021 14:08:17 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/git-commands/</guid>
      <description>Git 全局设置 1 2 git config --global user.name &amp;#34;Administrator&amp;#34; git config --global user.email &amp;#34;admin@example.com&amp;#34; 创建新版本库 1 2 3 4 5 6 git clone git@code.aliyun.com:llmgo/test.git cd test touch README.md git add README.md git commit -m &amp;#34;add README&amp;#34; git push -u origin master 已存在的文件夹或 Git 仓库 1 2 3 4 5 6 cd existing_folder git init</description>
    </item>
    
    <item>
      <title>go 基础之指针</title>
      <link>https://www.llmgo.cn/post/go-pointer/</link>
      <pubDate>Fri, 09 Apr 2021 10:50:17 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-pointer/</guid>
      <description>Go 语言基础之指针 不像 Java 和 .NET，Go 语言为程序员提供了控制数据结构的指针的能力；但是，你不能进行指针运算。通过给予程序员基本内存布局，Go</description>
    </item>
    
    <item>
      <title>Go使用gojsonq库来查询Json</title>
      <link>https://www.llmgo.cn/post/go-use-gojsonq-lib-query-json/</link>
      <pubDate>Thu, 08 Apr 2021 20:43:00 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-use-gojsonq-lib-query-json/</guid>
      <description>Go使用gojsonq库来查询Json 准备简单的数据 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 { &amp;#34;name&amp;#34;:&amp;#34;computers&amp;#34;, &amp;#34;description&amp;#34;:&amp;#34;List of computer products&amp;#34;, &amp;#34;prices&amp;#34;:[2400, 2100, 1200, 400.87, 89.90,</description>
    </item>
    
    <item>
      <title>使用接口的方式实现一个既可以往终端写日志也可以往文件写日志的简易日志库</title>
      <link>https://www.llmgo.cn/post/use-interface-loglib/</link>
      <pubDate>Thu, 08 Apr 2021 15:17:08 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/use-interface-loglib/</guid>
      <description>使用接口的方式实现一个既可以往终端写日志也可以往文件写日志的简易日志库。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34</description>
    </item>
    
    <item>
      <title>使用pm2来管理go应用进程</title>
      <link>https://www.llmgo.cn/post/use-pm2-management-go-app/</link>
      <pubDate>Thu, 08 Apr 2021 11:18:51 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/use-pm2-management-go-app/</guid>
      <description>使用pm2来管理go应用进程 pm2是一个进程管理工具,可以用它来管理你的node进程，并查看node进程的状态，当然也支持性能监控，进程守护</description>
    </item>
    
    <item>
      <title>Jenkins 利用Build Name and Description Setter插件在build history输出信息</title>
      <link>https://www.llmgo.cn/post/jenkins-output-infomation-in-buildhistory/</link>
      <pubDate>Wed, 07 Apr 2021 11:11:53 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/jenkins-output-infomation-in-buildhistory/</guid>
      <description>Jenkins 利用Build Name and Description Setter插件在build history输出信息 插件名称：Build Name and Description Setter Pipeline语法 1 2 3 4 5 6 7 stage(&amp;#34;Initialization&amp;#34;) { steps</description>
    </item>
    
    <item>
      <title>Jenkins WebHook 自动构建</title>
      <link>https://www.llmgo.cn/post/jenkins-webhook-autobuild/</link>
      <pubDate>Wed, 07 Apr 2021 11:10:17 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/jenkins-webhook-autobuild/</guid>
      <description>Jenkins WebHook 自动构建 [toc] 1. 安装 Gitlab Hook 插件 需要安装两个插件： Gitlab Hook GitLab 2. Jenkins Job设置自动构建 点击右下角的ADCANCED,构建一个Secret token 3. Gitlab 设置web</description>
    </item>
    
    <item>
      <title>Java 应用cpu占用高排查思路</title>
      <link>https://www.llmgo.cn/post/java-project-high-cpu-usage/</link>
      <pubDate>Wed, 07 Apr 2021 11:08:33 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/java-project-high-cpu-usage/</guid>
      <description>Java 项目CPU占用高排查 [toc] 一、分析问题 cpu占用高一般来说是项目本身自发导致的，自发包括定时任务和死循环，而具体哪一段代码也确定不了， 现在我们</description>
    </item>
    
    <item>
      <title>pinpoint 告警配置</title>
      <link>https://www.llmgo.cn/post/pinpoint-alert-config/</link>
      <pubDate>Wed, 07 Apr 2021 11:06:08 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/pinpoint-alert-config/</guid>
      <description>Pinpoint 告警配置 新建一个组，添加2个成员 组必须是以数字构成 选择告警 添加告警 告警类型 以下规则中，请求是当前应用发送出去的，当前应用是请求的发起者。 类</description>
    </item>
    
    <item>
      <title>apm 软件pinpoint 安装</title>
      <link>https://www.llmgo.cn/post/pinpoint-install/</link>
      <pubDate>Wed, 07 Apr 2021 11:05:38 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/pinpoint-install/</guid>
      <description>APM软件Pinpoint 安装 APM（Application Performance Management）应用性能管理 [toc] 项目地址：https://github.c</description>
    </item>
    
    <item>
      <title>spring cloud gateway访问不了注册的地址</title>
      <link>https://www.llmgo.cn/post/spring-cloud-gateway-name-or-service-not-known/</link>
      <pubDate>Wed, 07 Apr 2021 11:04:47 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/spring-cloud-gateway-name-or-service-not-known/</guid>
      <description>spring cloud gateway 报错 Name or service not known 是这样的，eureka、gateway和普通的微服务在本地是OK的， 部署到k8s后，通过gateway访问某个微服务就报</description>
    </item>
    
  </channel>
</rss>
