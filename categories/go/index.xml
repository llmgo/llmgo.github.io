<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on 一个小运维的博客</title>
    <link>https://www.llmgo.cn/categories/go/</link>
    <description>Recent content in go on 一个小运维的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 07 Apr 2021 10:51:51 +0800</lastBuildDate><atom:link href="https://www.llmgo.cn/categories/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>go 每日练习 01</title>
      <link>https://www.llmgo.cn/post/go-test001/</link>
      <pubDate>Wed, 07 Apr 2021 10:51:51 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-test001/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 package main import ( &amp;#34;bufio&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; &amp;#34;os&amp;#34; &amp;#34;strings&amp;#34; ) /* 编写一个程序，从键盘读取输</description>
    </item>
    
    <item>
      <title>go 每日练习 02</title>
      <link>https://www.llmgo.cn/post/go-test002/</link>
      <pubDate>Wed, 07 Apr 2021 10:51:51 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-test002/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 package main import ( &amp;#34;bufio&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;os&amp;#34; &amp;#34;strings&amp;#34; &amp;#34;unicode&amp;#34; ) /* 9.敏感词列表 li = [&amp;#3</description>
    </item>
    
    <item>
      <title>go 每日练习 03</title>
      <link>https://www.llmgo.cn/post/go-test003/</link>
      <pubDate>Wed, 07 Apr 2021 10:51:51 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-test003/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 package main /* 写一个 Season 函数，要求接受一个代表月份的数字，然后返回所代表月份所在季节的名称（不用考虑月</description>
    </item>
    
    <item>
      <title>go 每日练习 04</title>
      <link>https://www.llmgo.cn/post/go-test004/</link>
      <pubDate>Wed, 07 Apr 2021 10:51:51 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-test004/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package main import &amp;#34;fmt&amp;#34; // fib returns a function that returns // successive Fibonacci numbers. func fib() func() int { a, b := 0, 1 return func() int { a, b = b, a+b return a } } func main() { f := fib() // Function calls are evaluated left-to-right. fmt.Println(f(),</description>
    </item>
    
    <item>
      <title>go 每日练习 05</title>
      <link>https://www.llmgo.cn/post/go-test005/</link>
      <pubDate>Wed, 07 Apr 2021 10:51:51 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-test005/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 package main /* 编写一个名字为 MySqrt 的函数，计算一个 float64 类型浮点数的平方根，如果参数是一</description>
    </item>
    
    <item>
      <title>go 每日练习 06</title>
      <link>https://www.llmgo.cn/post/go-test006/</link>
      <pubDate>Wed, 07 Apr 2021 10:51:51 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-test006/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 package main /* 练习 10.1 vcard.go： 定义结构体 Address 和 V</description>
    </item>
    
    <item>
      <title>go 每日练习 07</title>
      <link>https://www.llmgo.cn/post/go-test007/</link>
      <pubDate>Wed, 07 Apr 2021 10:51:51 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-test007/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 package main import &amp;#34;fmt&amp;#34; // 定义结构体 employee，它有一个 salary 字段，给这个结构体定义一个方法 giveRaise 来按照指定的百分比增</description>
    </item>
    
    <item>
      <title>go 每日练习 08</title>
      <link>https://www.llmgo.cn/post/go-test008/</link>
      <pubDate>Wed, 07 Apr 2021 10:51:51 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-test008/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package main import ( &amp;#34;io&amp;#34; &amp;#34;os&amp;#34; ) // 实现复制文件 func copyFile(dstName, srcName string) (written int64, err error) { src, err := os.Open(srcName) if err != nil { return } defer src.Close() dst, err := os.Create(dstName)</description>
    </item>
    
    <item>
      <title>go 每日练习 09</title>
      <link>https://www.llmgo.cn/post/go-test009/</link>
      <pubDate>Wed, 07 Apr 2021 10:51:51 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-test009/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;io/ioutil&amp;#34; &amp;#34;os&amp;#34; &amp;#34;strings&amp;#34; ) // 实现cat文件 func fileCat(file string) (err error) { text, err := ioutil.ReadFile(file) if err != nil { return } fmt.Println(strings.TrimSpace(string(text))) return</description>
    </item>
    
    <item>
      <title>go 每日练习 10</title>
      <link>https://www.llmgo.cn/post/go-test010/</link>
      <pubDate>Wed, 07 Apr 2021 10:51:51 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-test010/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;io&amp;#34; &amp;#34;os&amp;#34; ) func fileCat(file string) { f, err := os.Open(file) if err != nil { panic(err) } // tmp := make([]byte, 128) var tmp []byte n, err := f.Read(tmp) if err != nil { panic(err)</description>
    </item>
    
    <item>
      <title>go 每日练习 11</title>
      <link>https://www.llmgo.cn/post/go-test011/</link>
      <pubDate>Wed, 07 Apr 2021 10:51:51 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-test011/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 package main import ( &amp;#34;flag&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;os&amp;#34; ) var NewLine = flag.Bool(&amp;#34;n&amp;#34;, false, &amp;#34;print new line &amp;#34;) // echo -n print new line const ( Space = &amp;#34; &amp;#34; Newline = &amp;#34;\n&amp;#34; ) func main() { flag.Parse() s :=</description>
    </item>
    
    <item>
      <title>go 运行简单http服务器</title>
      <link>https://www.llmgo.cn/post/go-simple-http/</link>
      <pubDate>Wed, 07 Apr 2021 10:46:00 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-simple-http/</guid>
      <description>简单的http服务器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;net/http&amp;#34; ) // 实现一个简单的http服务 func main() { http.HandleFunc(&amp;#34;/&amp;#34;, func(w http.ResponseWriter, r *http.Request) { fmt.Fprintf(w, &amp;#34;hello , you&amp;#39;ve requestend: %v\n&amp;#34;, r.URL.Path) }) http.ListenAndServe(&amp;#34;:8080&amp;#34;, nil) }</description>
    </item>
    
    <item>
      <title>go 执行linux命令</title>
      <link>https://www.llmgo.cn/post/go-os-exec/</link>
      <pubDate>Wed, 07 Apr 2021 10:45:44 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-os-exec/</guid>
      <description>Go使用os/exec执行命令 Go可以非常方便地执行外部程序，让我们开始探索之旅吧。 执行命令并且获取输出1 1 2 3 4 5 6 7 8 func methodOne() { cmd := &amp;#34;cat go.mod&amp;#34; stdout, err</description>
    </item>
    
    <item>
      <title>Go 获取用户输入</title>
      <link>https://www.llmgo.cn/post/go-get-user-input/</link>
      <pubDate>Wed, 07 Apr 2021 10:44:53 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-get-user-input/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 package main import ( &amp;#34;bufio&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;os&amp;#34; &amp;#34;strings&amp;#34; ) // bufio func bufIODemo() { reader :=</description>
    </item>
    
    <item>
      <title>Go defer</title>
      <link>https://www.llmgo.cn/post/go-defer/</link>
      <pubDate>Wed, 07 Apr 2021 10:44:22 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-defer/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 package main import &amp;#34;fmt&amp;#34; func a() int { var i int defer func() { i++ }() return i } func b() (i int) { defer func() { i++ }() return i } func main() { fmt.Println(a())</description>
    </item>
    
    <item>
      <title>Go模拟cur操作</title>
      <link>https://www.llmgo.cn/post/go-curl/</link>
      <pubDate>Wed, 07 Apr 2021 10:43:55 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-curl/</guid>
      <description>Go模拟cur操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;io/ioutil&amp;#34; &amp;#34;log&amp;#34; &amp;#34;net/http&amp;#34; ) func main() { // 模拟curl命令 client := &amp;amp;http.Client{} req, err := http.NewRequest(&amp;#34;GET&amp;#34;, &amp;#34;http://baidu.com&amp;#34;, nil) if err</description>
    </item>
    
    <item>
      <title>go 实现cat -n 命令</title>
      <link>https://www.llmgo.cn/post/go-cat-n/</link>
      <pubDate>Wed, 07 Apr 2021 10:43:04 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-cat-n/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 package main import ( &amp;#34;bufio&amp;#34; &amp;#34;flag&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;io&amp;#34; &amp;#34;os&amp;#34; ) // 扩展 cat.go 例子，使用 flag 添加一</description>
    </item>
    
    <item>
      <title>go 实现cat命令</title>
      <link>https://www.llmgo.cn/post/go-cat/</link>
      <pubDate>Wed, 07 Apr 2021 10:42:48 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-cat/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 package main import ( &amp;#34;bufio&amp;#34; &amp;#34;flag&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;io&amp;#34; &amp;#34;os&amp;#34; ) // 实现linux cat命令 func cat(r *bufio.Reader) { for { line, err := r.ReadBytes(&amp;#39;\n&amp;#39;)</description>
    </item>
    
    <item>
      <title>go 99乘法表</title>
      <link>https://www.llmgo.cn/post/go-99/</link>
      <pubDate>Wed, 07 Apr 2021 10:42:15 +0800</pubDate>
      
      <guid>https://www.llmgo.cn/post/go-99/</guid>
      <description>99 乘法表 1 2 3 4 5 6 7 8 9 10 11 12 13 14 package main import &amp;#34;fmt&amp;#34; func main() { // 打印99乘法表 for i := 1; i &amp;lt;= 9; i++ { for j := 1; j &amp;lt;= i; j++ { fmt.Printf(&amp;#34;%d * %d = %d\t&amp;#34;, j, i, i*j) } fmt.Println() } }</description>
    </item>
    
  </channel>
</rss>
